{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\micha\\\\Desktop\\\\Nokia\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\micha\\\\Desktop\\\\Nokia\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\micha\\\\Desktop\\\\Nokia\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\micha\\\\Desktop\\\\Nokia\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\micha\\\\Desktop\\\\Nokia\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\micha\\\\Desktop\\\\Nokia\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\micha\\\\Desktop\\\\Nokia\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\micha\\\\Desktop\\\\Nokia\\\\innovativeproject-moveup\\\\client\\\\src\\\\components\\\\Register.jsx\";\nimport React, { Component } from 'react';\nimport { register } from './UserFunctions';\nimport './Register.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { FormErrors } from './FormErrors';\nvar genders = [{\n  value: 'male'\n}, {\n  value: 'female'\n}];\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this));\n\n    _this.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.handleDateChange = function (date) {\n      _this.setState({\n        date: date\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.state = {\n      date: new Date(),\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      age: '',\n      number_phone: '',\n      gender: 'male',\n      formErrors: {\n        email: '',\n        password: ''\n      },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var emailValid = this.state.emailValid;\n      var passwordValid = this.state.passwordValid;\n\n      switch (fieldName) {\n        case 'email':\n          emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n          fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n          break;\n\n        case 'password':\n          passwordValid = value.length >= 6;\n          fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        formValid: this.state.emailValid && this.state.passwordValid\n      });\n    }\n  }, {\n    key: \"errorClass\",\n    value: function errorClass(error) {\n      return error.length === 0 ? '' : 'has-error';\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var user = {\n        first_name: this.state.first_name,\n        last_name: this.state.last_name,\n        email: this.state.email,\n        password: this.state.password,\n        age: this.state.date.getFullYear() + '-' + (this.state.date.getMonth() + 1) + '-' + this.state.date.getDate(),\n        sex: this.state.gender,\n        number_phone: this.state.number_phone\n      };\n      register(user).then(function (res) {\n        if (res) {\n          alert(\"u crated account\");\n\n          _this2.props.history.push(\"/login\");\n        } else {\n          alert(\"Taki email juz istnieje\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        component: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Create your account\")), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(FormErrors, {\n        formErrors: this.state.formErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \".concat(this.errorClass(this.state.formErrors.email)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        type: \"email\",\n        variant: \"outlined\",\n        required: true,\n        className: \"form-control\",\n        name: \"email\",\n        placeholder: \"Email\",\n        label: \"EMAIL\",\n        margin: \"normal\",\n        value: this.state.email,\n        onChange: this.handleUserInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \".concat(this.errorClass(this.state.formErrors.password)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        type: \"password\",\n        variant: \"outlined\",\n        className: \"form-control\",\n        name: \"password\",\n        label: \"PASSWORD\",\n        margin: \"normal\",\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChange: this.handleUserInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        type: \"text\",\n        variant: \"outlined\",\n        name: \"first_name\",\n        placeholder: \"Enter First Name\",\n        value: this.state.first_name,\n        onChange: this.onChange,\n        label: \"FIRST NAME\",\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        type: \"text\",\n        variant: \"outlined\",\n        name: \"last_name\",\n        placeholder: \"Enter Last Name\",\n        value: this.state.last_name,\n        onChange: this.onChange,\n        label: \"LAST NAME\",\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        select: true,\n        label: \"GENDER\",\n        value: this.state.gender,\n        onChange: this.handleChange('gender'),\n        SelectProps: {\n          native: true\n        },\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, genders.map(function (option) {\n        return React.createElement(\"option\", {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, option.value);\n      }))), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"enter\",\n        alignItems: \"center\",\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        margin: \"normal\",\n        label: \"Date picker\",\n        value: this.state.date,\n        onChange: this.handleDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }))))), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        type: \"number_phone\",\n        variant: \"outlined\",\n        name: \"number_phone\",\n        placeholder: \"Enter your number of phone\",\n        value: this.state.number_phone,\n        onChange: this.onChange,\n        label: \"NUMBER PHONE\",\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(FormErrors, {\n        formErrors: this.state.formErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: !this.state.formValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Sign up\"))));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["C:\\Users\\micha\\Desktop\\Nokia\\innovativeproject-moveup\\client\\src\\components\\Register.jsx"],"names":["React","Component","register","Button","TextField","Grid","Typography","DatePicker","MuiPickersUtilsProvider","DateFnsUtils","FormErrors","genders","value","Register","handleUserInput","e","name","target","setState","validateField","handleDateChange","date","handleChange","event","state","Date","first_name","last_name","email","password","age","number_phone","gender","formErrors","emailValid","passwordValid","formValid","onChange","bind","onSubmit","fieldName","fieldValidationErrors","match","length","validateForm","error","preventDefault","user","getFullYear","getMonth","getDate","sex","then","res","alert","props","history","push","errorClass","native","map","option"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { register } from './UserFunctions'\r\nimport './Register.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from \"@material-ui/core/Grid/Grid\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport {DatePicker, MuiPickersUtilsProvider} from \"material-ui-pickers\";\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { FormErrors } from './FormErrors';\r\nconst genders = [\r\n    {\r\n        value: 'male',\r\n    },\r\n    {\r\n        value: 'female',\r\n    },\r\n];\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            date: new Date(),\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: '',\r\n            age: '',\r\n            number_phone: '',\r\n            gender: 'male',\r\n            formErrors: {email: '', password: ''},\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            formValid: false\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    handleUserInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({[name]: value},\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        this.setState({ date: date });\r\n\r\n    };\r\n\r\n    onChange (e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    validateField(fieldName, value) {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n\r\n        switch(fieldName) {\r\n            case 'email':\r\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidationErrors.email = emailValid ? '' : ' is invalid';\r\n                break;\r\n            case 'password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidationErrors.password = passwordValid ? '': ' is too short';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({formErrors: fieldValidationErrors,\r\n            emailValid: emailValid,\r\n            passwordValid: passwordValid\r\n        }, this.validateForm);\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({formValid: this.state.emailValid && this.state.passwordValid});\r\n    }\r\n\r\n    errorClass(error) {\r\n        return(error.length === 0 ? '' : 'has-error');\r\n    }\r\n\r\n    onSubmit (e) {\r\n        e.preventDefault()\r\n\r\n        const user = {\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            age: this.state.date.getFullYear() + '-' + (this.state.date.getMonth()+1) + '-' + this.state.date.getDate(),\r\n            sex: this.state.gender,\r\n            number_phone: this.state.number_phone\r\n        }\r\n        register(user).then(res => {\r\n            if(res)\r\n            {\r\n                alert(\"u crated account\")\r\n                this.props.history.push(`/login`)\r\n            }\r\n            else\r\n            {\r\n                alert(\"Taki email juz istnieje\")\r\n            }\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"center\" spacing={8}>\r\n                                <Grid item >\r\n                                    <Typography variant=\"h4\" component=\"h4\">Create your account</Typography>\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <div className=\"panel panel-default\">\r\n                                        <FormErrors formErrors={this.state.formErrors} />\r\n                                    </div>\r\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.email)}`}>\r\n                                        <TextField\r\n                                            type=\"email\"\r\n                                            variant=\"outlined\"\r\n                                            required className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Email\"\r\n                                            label=\"EMAIL\"\r\n                                            margin=\"normal\"\r\n                                            value={this.state.email}\r\n                                            onChange={this.handleUserInput}  />\r\n                                    </div>\r\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.password)}`}>\r\n                                        <TextField\r\n                                            type=\"password\"\r\n                                            variant=\"outlined\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password\"\r\n                                            label=\"PASSWORD\"\r\n                                            margin=\"normal\"\r\n                                            placeholder=\"Password\"\r\n                                            value={this.state.password}\r\n                                            onChange={this.handleUserInput}  />\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                                <Grid item >\r\n                                <TextField type=\"text\"\r\n                                           variant=\"outlined\"\r\n                                           name=\"first_name\"\r\n                                           placeholder=\"Enter First Name\"\r\n                                           value={this.state.first_name}\r\n                                           onChange={this.onChange}\r\n                                           label=\"FIRST NAME\"\r\n                                           margin=\"normal\"\r\n                                />\r\n                                </Grid>\r\n                                    <Grid item >\r\n                                <TextField type=\"text\"\r\n                                           variant=\"outlined\"\r\n                                           name=\"last_name\"\r\n                                           placeholder=\"Enter Last Name\"\r\n                                           value={this.state.last_name}\r\n                                           onChange={this.onChange}\r\n                                           label=\"LAST NAME\"\r\n                                           margin=\"normal\"\r\n                                />\r\n                                    </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        select\r\n                                        label=\"GENDER\"\r\n                                        value={this.state.gender}\r\n                                        onChange={this.handleChange('gender')}\r\n                                        SelectProps={{\r\n                                            native: true,\r\n                                        }}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    >\r\n                                        {genders.map(option => (\r\n                                            <option key={option.value} value={option.value}>\r\n                                                {option.value}\r\n                                                </option>\r\n                                        ))}\r\n                                        </TextField>\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <Grid container direction=\"row\" justify=\"enter\" alignItems=\"center\" spacing={24}>\r\n                                            <Grid item>\r\n                                                <DatePicker\r\n                                                    margin=\"normal\"\r\n                                                    label=\"Date picker\"\r\n                                                    value={this.state.date}\r\n                                                    onChange={this.handleDateChange}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </MuiPickersUtilsProvider>\r\n                                </Grid>\r\n                                <Grid item >\r\n                                <TextField type=\"number_phone\"\r\n                                           variant=\"outlined\"\r\n                                           name=\"number_phone\"\r\n                                           placeholder=\"Enter your number of phone\"\r\n                                           value={this.state.number_phone}\r\n                                           onChange={this.onChange}\r\n                                           label=\"NUMBER PHONE\"\r\n                                           margin=\"normal\"\r\n                                />\r\n                                </Grid>\r\n                                <div className=\"panel panel-default\">\r\n                                <FormErrors formErrors={this.state.formErrors} />\r\n                            </div>\r\n                                <Grid item >\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\" disabled={!this.state.formValid}>Sign up</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}