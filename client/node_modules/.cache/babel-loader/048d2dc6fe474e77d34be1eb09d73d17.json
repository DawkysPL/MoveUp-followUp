{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachWeekendOfYear;\n\nvar _index = require('../eachWeekendOfInterval/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../startOfYear/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('../endOfYear/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|Number} date - the given year\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * var result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\n\n\nfunction eachWeekendOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var startDate = (0, _index4.default)(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = (0, _index6.default)(dirtyDate);\n  return (0, _index2.default)({\n    start: startDate,\n    end: endDate\n  });\n}\n\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}