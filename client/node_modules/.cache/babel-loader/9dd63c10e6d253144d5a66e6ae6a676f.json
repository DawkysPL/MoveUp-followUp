{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setISODay;\n\nvar _index = require('../_lib/toInteger/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../toDate/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('../addDays/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = require('../getISODay/index.js');\n\nvar _index8 = _interopRequireDefault(_index7);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\n\n\nfunction setISODay(dirtyDate, dirtyDay) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = (0, _index4.default)(dirtyDate);\n  var day = (0, _index2.default)(dirtyDay);\n  var currentDay = (0, _index8.default)(date);\n  var diff = day - currentDay;\n  return (0, _index6.default)(date, diff);\n}\n\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}