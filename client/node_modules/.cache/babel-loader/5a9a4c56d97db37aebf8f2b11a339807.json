{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getDayOfYear;\n\nvar _index = require('../toDate/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../startOfYear/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('../differenceInCalendarDays/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\n\nfunction getDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = (0, _index2.default)(dirtyDate);\n  var diff = (0, _index6.default)(date, (0, _index4.default)(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}