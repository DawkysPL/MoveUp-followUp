{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\nokia2\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\nokia2\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\nokia2\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\nokia2\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\nokia2\\\\innovativeproject-moveup\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\nokia2\\\\innovativeproject-moveup\\\\client\\\\src\\\\components\\\\AllEvents.jsx\";\nimport React, { Component } from 'react';\nimport ViewCommentsInAllEvents from './ViewCommentsInAllEvents';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport \"./AllEvents.css\";\nimport Grid from '@material-ui/core/Grid';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200\n    }\n  };\n};\n\nvar AllEvents =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllEvents, _Component);\n\n  function AllEvents() {\n    var _this;\n\n    _classCallCheck(this, AllEvents);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllEvents).call(this));\n    _this.state = {\n      searchNameEvent: '',\n      searchStartPoint: '',\n      searchTypeOfSport: '',\n      events: []\n    };\n    return _this;\n  }\n\n  _createClass(AllEvents, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('/events/getAllEvents').then(function (res) {\n        return res.json();\n      }).then(function (events) {\n        return _this2.setState({\n          events: events\n        });\n      });\n    }\n  }, {\n    key: \"updateSearchNameEvent\",\n    value: function updateSearchNameEvent(event) {\n      this.setState({\n        searchNameEvent: event.target.value.substr(0, 20)\n      });\n    }\n  }, {\n    key: \"updateSearchStartPoint\",\n    value: function updateSearchStartPoint(event) {\n      this.setState({\n        searchStartPoint: event.target.value.substr(0, 20)\n      });\n    }\n  }, {\n    key: \"updateSearchTypeOfSport\",\n    value: function updateSearchTypeOfSport(event) {\n      this.setState({\n        searchTypeOfSport: event.target.value.substr(0, 20)\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(eventId) {\n      localStorage.setItem('userEvent', eventId);\n      this.props.history.push(\"/addComment\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      var filteredEvents = this.state.events.filter(function (event) {\n        if (event.name_event.toLowerCase().indexOf(_this3.state.searchNameEvent.toLowerCase()) !== -1 && event.start_point.toLowerCase().indexOf(_this3.state.searchStartPoint.toLowerCase()) !== -1 && event.type_sport.toLowerCase().indexOf(_this3.state.searchTypeOfSport.toLowerCase()) !== -1) {\n          return event;\n        }\n\n        return 0;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row-reverse\",\n        justify: \"flex-end\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"Search name event\",\n        className: \"inputSearch\",\n        placeholder: \"Search by name event\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.searchNameEvent,\n        onChange: this.updateSearchNameEvent.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"Search start\",\n        className: \"inputSearch\",\n        variant: \"outlined\",\n        placeholder: \"Search by where events will start\",\n        type: \"text\",\n        value: this.state.searchStartPoint,\n        onChange: this.updateSearchStartPoint.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"Search type of sport\",\n        className: \"inputSearch\",\n        placeholder: \"Search by type of sports\",\n        type: \"text\",\n        variant: \"outlined\",\n        value: this.state.searchTypeOfSport,\n        onChange: this.updateSearchTypeOfSport.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        spacing: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Events\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, filteredEvents.map(function (event) {\n        return React.createElement(\"li\", {\n          key: event.id_event,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          type: \"text\",\n          variant: \"outlined\",\n          className: classes.textField,\n          label: \"NAME EVENT\",\n          value: event.name_event,\n          margin: \"normal\",\n          InputProps: {\n            readOnly: true\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          type: \"text\",\n          variant: \"outlined\",\n          className: classes.textField,\n          label: \"START POINT\",\n          value: event.start_point,\n          margin: \"normal\",\n          InputProps: {\n            readOnly: true\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          type: \"text\",\n          variant: \"outlined\",\n          className: classes.textField,\n          label: \"TYPE OF SPORT\",\n          value: event.type_sport,\n          margin: \"normal\",\n          InputProps: {\n            readOnly: true\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          type: \"text\",\n          variant: \"outlined\",\n          className: classes.textField,\n          label: \"START DATE\",\n          value: event.date,\n          margin: \"normal\",\n          InputProps: {\n            readOnly: true\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }), React.createElement(Button, {\n          color: \"secondary\",\n          onClick: function onClick() {\n            _this3.onSubmit(event.id_event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \"Comment\"), React.createElement(ViewCommentsInAllEvents, {\n          eventId: event.id_event,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return AllEvents;\n}(Component);\n\nexport default withStyles(styles)(AllEvents);","map":{"version":3,"sources":["C:\\Users\\Mateusz\\Desktop\\nokia2\\innovativeproject-moveup\\client\\src\\components\\AllEvents.jsx"],"names":["React","Component","ViewCommentsInAllEvents","TextField","withStyles","Button","Grid","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","AllEvents","state","searchNameEvent","searchStartPoint","searchTypeOfSport","events","fetch","then","res","json","setState","event","target","value","substr","eventId","localStorage","setItem","props","history","push","classes","filteredEvents","filter","name_event","toLowerCase","indexOf","start_point","type_sport","updateSearchNameEvent","bind","updateSearchStartPoint","updateSearchTypeOfSport","map","id_event","readOnly","date","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ViewCommentsInAllEvents from './ViewCommentsInAllEvents'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./AllEvents.css\"\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n    },\r\n});\r\n class AllEvents extends Component {\r\n     constructor() {\r\n         super();\r\n         this.state = {\r\n             searchNameEvent: '',\r\n             searchStartPoint: '',\r\n             searchTypeOfSport: '',\r\n             events: []\r\n         }\r\n     }\r\n\r\n    componentDidMount(){\r\n        fetch('/events/getAllEvents')\r\n            .then(res => res.json())\r\n            .then(events => this.setState({events}));\r\n    }\r\n\r\n     updateSearchNameEvent(event) {\r\n         this.setState({searchNameEvent: event.target.value.substr(0,20)})\r\n     }\r\n     updateSearchStartPoint(event) {\r\n         this.setState({searchStartPoint: event.target.value.substr(0,20)})\r\n     }\r\n     updateSearchTypeOfSport(event) {\r\n         this.setState({searchTypeOfSport: event.target.value.substr(0,20)})\r\n     }\r\n\r\n\r\n     onSubmit (eventId) {\r\n         localStorage.setItem('userEvent', eventId)\r\n         this.props.history.push(`/addComment`)\r\n     }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n         let filteredEvents = this.state.events.filter(\r\n                (event) => {\r\n                     if(event.name_event.toLowerCase().indexOf(this.state.searchNameEvent.toLowerCase()) !== -1 && event.start_point.toLowerCase().indexOf(this.state.searchStartPoint.toLowerCase()) !== -1 && event.type_sport.toLowerCase().indexOf(this.state.searchTypeOfSport.toLowerCase()) !== -1)\r\n                     {\r\n                         return event;\r\n                     }\r\n                    return 0;\r\n                }\r\n            )\r\n         return (\r\n             <div>\r\n\r\n             <Grid container direction=\"row-reverse\" justify=\"flex-end\" alignItems=\"center\" >\r\n               <Grid item xs={4}>\r\n                <TextField\r\n                    name=\"Search name event\"\r\n                       className=\"inputSearch\"\r\n                       placeholder=\"Search by name event\"\r\n                           variant={\"outlined\"}\r\n                       type=\"text\"\r\n                       value={this.state.searchNameEvent}\r\n                       onChange={this.updateSearchNameEvent.bind(this)} />\r\n               </Grid>\r\n                 <Grid item xs={4}>\r\n                <TextField\r\n                    name=\"Search start\"\r\n                       className=\"inputSearch\"\r\n                           variant={\"outlined\"}\r\n                       placeholder=\"Search by where events will start\"\r\n                       type=\"text\"\r\n                       value={this.state.searchStartPoint}\r\n                       onChange={this.updateSearchStartPoint.bind(this)} />\r\n                 </Grid>\r\n                 <Grid item xs={4}>\r\n                <TextField\r\n                    name=\"Search type of sport\"\r\n                       className=\"inputSearch\"\r\n                       placeholder=\"Search by type of sports\"\r\n                       type=\"text\"\r\n                           variant={\"outlined\"}\r\n                       value={this.state.searchTypeOfSport}\r\n                       onChange={this.updateSearchTypeOfSport.bind(this)} />\r\n                 </Grid>\r\n             </Grid>\r\n                 <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0}>\r\n                     <Grid item>\r\n                <h1>Events</h1>\r\n                     </Grid>\r\n                 </Grid>\r\n             <div>\r\n                <ul>\r\n                    {filteredEvents.map(event =>\r\n                        <li key={event.id_event}>\r\n                            <TextField type=\"text\"\r\n                                       variant=\"outlined\"\r\n                                       className={classes.textField}\r\n                                       label={\"NAME EVENT\"}\r\n                                       value={event.name_event}\r\n                                       margin=\"normal\"\r\n                                       InputProps={{\r\n                                           readOnly: true,\r\n                                       }}\r\n                            />\r\n                            <TextField type=\"text\"\r\n                                       variant=\"outlined\"\r\n                                       className={classes.textField}\r\n                                       label={\"START POINT\"}\r\n                                       value={event.start_point}\r\n                                       margin=\"normal\"\r\n                                       InputProps={{\r\n                                           readOnly: true,\r\n                                       }}\r\n                            />\r\n                            <TextField type=\"text\"\r\n                                       variant=\"outlined\"\r\n                                       className={classes.textField}\r\n                                       label={\"TYPE OF SPORT\"}\r\n                                       value={event.type_sport}\r\n                                       margin=\"normal\"\r\n                                       InputProps={{\r\n                                           readOnly: true,\r\n                                       }}\r\n                            />\r\n                            <TextField type=\"text\"\r\n                                       variant=\"outlined\"\r\n                                       className={classes.textField}\r\n                                       label={\"START DATE\"}\r\n                                       value={event.date}\r\n                                       margin=\"normal\"\r\n                                       InputProps={{\r\n                                           readOnly: true,\r\n                                       }}\r\n                            />\r\n\r\n\r\n                            <Button color=\"secondary\"\r\n                                    onClick={() => {this.onSubmit(event.id_event)}}>\r\n                                Comment\r\n                            </Button>\r\n                        <ViewCommentsInAllEvents eventId={event.id_event}/>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n             </div>\r\n             </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default withStyles(styles)(AllEvents);\r\n"]},"metadata":{},"sourceType":"module"}